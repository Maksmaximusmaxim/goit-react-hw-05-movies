{"version":3,"file":"static/js/424.0ca305e8.chunk.js","mappings":"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","sources":["components/api.jsx","webpack://react-homework-template/./src/components/films/film.module.css?815f","components/films/filmsLink.jsx","components/films/filmsForm.jsx","page/films.jsx"],"sourcesContent":["import Notiflix from 'notiflix';\nimport PropTypes from 'prop-types';\nconst MYKEY = '948166b3059358327aeb7a534b796286';\nexport function trendingMovies() {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/week?api_key=${MYKEY}`\n  )\n    .then(r => {\n      if (!r.ok) {\n        //    throw new Error(r.message)\n        return Notiflix.Notify.info('проблемы с сервером');\n      }\n\n      return r.json();\n    })\n    .then(r => {\n      const data = r.results.map(mapd => {\n        const d = {\n          title: mapd.original_title,\n          id: mapd.id,\n          img: mapd.poster_path,\n        };\n        return d;\n      });\n      return data;\n    });\n}\nexport function MoreInfo(id) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${MYKEY}&language=UK`\n  )\n    .then(r => {\n      if (!r.ok) {\n        return Notiflix.Notify.info('проблемы с сервером');\n      }\n      return r.json();\n    })\n    .then(r => {\n      const data = {\n        title: r.title,\n        rating: r.popularity,\n        releaseDate: r.release_date,\n        genres: r.genres,\n        overview: r.overview,\n        posterPath: r.poster_path,\n      };\n      return data;\n    });\n}\nexport function getCredits(id) {\n  console.log(id, '1234');\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${MYKEY}&language=UK`\n  )\n    .then(r => {\n      if (!r.ok) {\n        return Notiflix.Notify.info('проблемы с сервером');\n      }\n      return r.json();\n    })\n    .then(r =>\n      r.cast.map(d => {\n        const data = {\n          character: d.character,\n          name: d.original_name,\n          photo: d.profile_path,\n          id: d.id,\n        };\n        return data;\n      })\n    );\n}\nexport function getReviews(id) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${MYKEY}&language=UK&page=1`\n  )\n    .then(r => {\n      if (!r.ok) {\n        return Notiflix.Notify.info('проблемы с сервером');\n      }\n      return r.json();\n    })\n    .then(r => {\n      const data = {\n        results: r.results,\n      };\n      return data;\n    });\n}\nexport function getMoviesByKeyword(search) {\n \n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${MYKEY}&language=UK&query=${search}&page=1&include_adult=false`\n  ).then(r => {\n    if(!r.ok){\n      return Notiflix.Notify.info('проблемы с сервером');\n    }\n    return r.json();\n  }).then(r => {\n    const data = r.results.map(\n    mapd => {\n      const d = {\n        id:mapd.id,\n        title:mapd.original_title,\n      }\n      return d;\n    }\n    )\n   return data; \n  })\n}\n\nMoreInfo.propTypes = {\n  id: PropTypes.number\n}\ngetCredits.propTypes = {\n  id: PropTypes.number\n}\ngetReviews.propTypes = {\n  id: PropTypes.number\n}\ngetMoviesByKeyword.propTypes = {\n  search: PropTypes.string\n}","// extracted by mini-css-extract-plugin\nexport default {\"Link\":\"film_Link__au9b0\"};","import {Link , useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './film.module.css'\nexport function FilmLink({ id, title }) {\nconst location = useLocation()\n\n  return (\n    <li>\n      <Link className={css.Link} to={`${id}`} state={{from:location.pathname}}  >{title}</Link>\n    </li>\n  );\n}\nFilmLink.propTypes = {\n  id: PropTypes.number,\n  title: PropTypes.string,\n};\n","import { useSearchParams } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nexport function FilmForm() {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const onsubmit = e => {\n    e.preventDefault();\n    setSearchParams('');\n  };\n  const updateQueryString = name => {\n \n    const nextParams = name !== '' ? { name } : '';\n\n    setSearchParams(nextParams);\n  };\n  const productName = searchParams.get('name') ?? '';\n\n  return (\n  \n    <Box\n      onSubmit={onsubmit}\n      component=\"form\"\n      sx={{\n        '& > :not(style)': { m: 1, width: '25ch' },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <TextField\n        id=\"outlined-name\"\n        label=\"название\"\n        value={productName}\n        onChange={e => updateQueryString(e.target.value)}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n\n      {/* <input\n          value={productName}\n          onChange={e => updateQueryString(e.target.value)}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        /> */}\n\n      <Button variant=\"contained\" type=\"submit\">\n        поиск\n      </Button>\n    </Box>\n   \n  );\n}\n","import { Outlet, useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { FilmForm } from '../components/films/filmsForm';\nimport { getMoviesByKeyword } from 'components/api';\nimport { FilmLink } from '../components/films/filmsLink';\n\nexport function Films() {\n  const [searchParams] = useSearchParams();\n  const search = searchParams.get('name');\n\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    if (search === \"\" || !search) {\n      return;\n    }\n    getMoviesByKeyword(search).then(setData);\n  }, [search]);\n\n  return (\n    <>\n      <FilmForm />\n      <ul>\n        {data &&\n          data.map(d => <FilmLink key={d.id} title={d.title} id={d.id} />)}\n      </ul>\n\n      <Outlet />\n    </>\n  );\n}\n"],"names":["MYKEY","trendingMovies","fetch","then","r","ok","json","Notiflix","results","map","mapd","title","original_title","id","img","poster_path","MoreInfo","rating","popularity","releaseDate","release_date","genres","overview","posterPath","getCredits","console","log","cast","d","character","name","original_name","photo","profile_path","getReviews","getMoviesByKeyword","search","propTypes","PropTypes","FilmLink","location","useLocation","className","css","to","state","from","pathname","FilmForm","useSearchParams","searchParams","setSearchParams","productName","get","Box","onSubmit","e","preventDefault","component","sx","m","width","noValidate","autoComplete","TextField","label","value","onChange","target","type","pattern","required","Button","variant","Films","useState","data","setData","useEffect"],"sourceRoot":""}